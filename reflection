from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from funcs import *
import numpy as np



#creating x,y for 3D plotting
len = 25
xx, yy = np.meshgrid(range(len), range(len))
#setting up plot
fig = plt.figure()
ax = fig.add_subplot(111,projection='3d',aspect='equal')

#Equation of Plane is : n.T * x = c 

#defining planes
n1 = np.array([2,3,-4]).reshape((3,1))

c1 = -22


#corresponding z for planes
z1 = ((c1-n1[0]*xx-n1[1]*yy)*1.0)/(n1[2])


#defining line : x(k) = A + k*l
A = np.array([0,0,0]).reshape((3,1))
M = np.array([1,4,5]).reshape((3,1))
P =np.array([1,-2,3]).reshape((3,1))
R =np.array([2,2,8]).reshape((3,1))
Q =np.array([3,6,13]).reshape((3,1))
#generating points in Line 
l1_p = line_dir_pt(M,A)
l2_p = line_dir_pt(M,P)
#plotting planes
ax.plot_surface(xx, yy, z1, color='g',alpha=0.5)


#plotting line
plt.plot(l1_p[0,:],l1_p[1,:],l1_p[2,:],label="Line $L_1$")
plt.plot(l2_p[0,:],l2_p[1,:],l2_p[2,:],label="Line $L_2$")
ax.scatter(P[0],P[1],P[2],'o',label="Point P")
ax.scatter(Q[0],Q[1],Q[2],'o',label="Point Q")
ax.scatter(R[0],R[1],R[2],'o',label="Point R")
plt.xlabel('$x$')
plt.ylabel('$y$')

plt.legend(loc='best')
plt.grid()
plt.show()
